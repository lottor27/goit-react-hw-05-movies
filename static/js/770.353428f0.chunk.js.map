{"version":3,"file":"static/js/770.353428f0.chunk.js","mappings":"+VAaAA,EAAAA,EAAAA,SAAAA,QAAyB,8BAEzB,IAAMC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAKKC,EAAmB,mCAAG,uGACXN,EAAAA,EAAAA,GAAM,uCAAwCC,GADnC,uBAC1BM,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,qDAKnBC,EAAe,mCAAG,uGACPR,EAAAA,EAAAA,GAAM,sCAAuCC,GADtC,uBACtBM,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAMfE,EAAiB,mCAAG,WAAOC,GAAP,0FACTV,EAAAA,EAAAA,GAAM,wBAAD,OAAyBU,EAAzB,8CAA4ET,GADxE,uBACxBM,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKjBI,EAAkB,mCAAG,WAAOC,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,mBAAsCX,GADjC,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKlBM,EAAkB,mCAAG,WAAOD,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,2BAA8CX,GADzC,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAMlBO,EAAkB,mCAAG,WAAOF,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,kCAAqDX,GADhD,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKlBQ,EAAiB,SAACC,GAC7B,MAAM,sCAAN,OAA6CA,EAC9C,C,wJCFD,EAlDa,WACT,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAsCM,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,2FACnBF,GAAY,GACZF,EAAS,IAFU,mBAIIT,EAAAA,EAAAA,IAAmBD,GAJvB,OAITL,EAJS,OAKfa,EAAeb,EAAKoB,MALL,gDAQfL,EAAS,KAAMM,SACfC,QAAQC,IAAIT,GATG,yBAWfG,GAAY,GAXG,4EAAH,qDAcpBE,GACH,GAAE,CAACL,EAAOT,IAEXiB,QAAQC,IAAIX,IAER,gCACKI,IAAY,SAACQ,EAAA,EAAD,KACb,wBAAI,YACHZ,IACD,gBAAKa,UAAU,qBAAf,SACCb,EAAYc,KAAI,SAAAC,GACb,IAAMC,EAAS,8CAA0CD,EAAWE,cAC9DC,EAAaH,EAAWE,aAAeD,E,0vSAC7C,OACE,iBAAKH,UAAU,YAAf,WAChB,gBAAKM,IAAKD,EAAYL,UAAU,eAAeO,IAAKL,EAAWM,QAC/D,iBAAKR,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,SAA4BE,EAAWM,QACvC,cAAGR,UAAU,YAAb,SAA0BE,EAAWO,aACrC,eAAGT,UAAU,YAAb,UAAyB,gBAAcE,EAAWQ,mBALJR,EAAWS,GAShD,QAIZ,C,0CCvCD,IAde,WACd,IAWE,C","sources":["ServiceApi/AllApiFetch.jsx","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\n\n\n\n\nimport axios from 'axios'\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/'\n\nconst options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MWY1ZmQ4ZGMwZDZkNWUzNmE0MTk2NTgzYzVjMTQ5ZSIsInN1YiI6IjY0ZDI5ODNlODUwOTBmMDE0NDVkMTZhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cCL_vkXeZRKopM-L3r01YH3xygP-PT4RBaXjsS3_dWE',\n    },\n};\n\n\nexport const getAllTrendingFilms = async () => {\n\tconst { data } = await axios(`3/trending/movie/week?language=en-US`, options)\n\treturn data\n}\n\nexport const getTrendingFilm = async () => {\n\tconst { data } = await axios(`3/trending/movie/day?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllSearchFilms = async (query) => {\n\tconst { data } = await axios(`3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getAllFilmsDetails = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}?language=en-US`, options)\n\treturn data\n}\n\nexport const getAllFilmsCredits = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/credits?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllFilmsReviews = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/reviews?language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getPosterMovie = (pathToPoster) => {\n  return `https://image.tmdb.org/t/p/original${pathToPoster}`\n}\n\n\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getAllFilmsCredits } from \"ServiceApi/AllApiFetch\"\nimport Loader from \"components/Loader/Loader\";\nimport DefaultActor from 'DefaultActor.jpg'\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [castResults, setCastResults] = useState(null);\n    const [Error, setError] = useState('');\n    const [isLoader, setIsLoader] = useState(false);\n\n    useEffect(() => {\n        const fetchMovieCast = async () => {\n            setIsLoader(true);\n            setError('');\n            try {\n                const data = await getAllFilmsCredits(movieId);\n                setCastResults(data.cast);\n            }\n            catch (error) {\n                setError(error.message);\n                console.log(Error)\n            } finally {\n                setIsLoader(false);\n            }\n        }\n        fetchMovieCast()\n    }, [Error, movieId]);\n\n    console.log(castResults);\n    return (\n        <>\n            {isLoader && <Loader />}\n            <h2>Casting</h2>\n            {castResults && \n            <div className=\"card-group cardbox\"> \n            {castResults.map(castResult => {\n                const avatarIMG = `https://image.tmdb.org/t/p/original/${castResult.profile_path}`\n                const posterPath = castResult.profile_path ? avatarIMG : DefaultActor;\n                return (\n                  <div className=\"card-cast\" key={castResult.id}>\n  <img src={posterPath} className=\"card-img-top\" alt={castResult.name}/>\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">{castResult.name}</h5>\n    <p className=\"card-text\">{castResult.character}</p>\n    <p className=\"card-text\">Popularity - {castResult.popularity}</p>\n  </div>\n</div>\n                )\n            })}\n        </div>}\n        </>\n    )\n}\n\nexport default Cast","import { Rings } from  'react-loader-spinner'\n\nconst Loader = () => {\n<Rings\n  height=\"80\"\n  width=\"80\"\n  color=\"#4fa94d\"\n  radius=\"6\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"rings-loading\"\n/>\n    \n  }\n  \nexport default Loader"],"names":["axios","options","method","headers","accept","Authorization","getAllTrendingFilms","data","getTrendingFilm","getAllSearchFilms","query","getAllFilmsDetails","movieId","getAllFilmsCredits","getAllFilmsReviews","getPosterMovie","pathToPoster","useParams","useState","castResults","setCastResults","Error","setError","isLoader","setIsLoader","useEffect","fetchMovieCast","cast","message","console","log","Loader","className","map","castResult","avatarIMG","profile_path","posterPath","src","alt","name","character","popularity","id"],"sourceRoot":""}