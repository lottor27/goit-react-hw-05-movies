{"version":3,"file":"static/js/841.453c08d1.chunk.js","mappings":"uUAaAA,EAAAA,EAAAA,SAAAA,QAAyB,8BAEzB,IAAMC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAKKC,EAAmB,mCAAG,uGACXN,EAAAA,EAAAA,GAAM,uCAAwCC,GADnC,uBAC1BM,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,qDAKnBC,EAAe,mCAAG,uGACPR,EAAAA,EAAAA,GAAM,sCAAuCC,GADtC,uBACtBM,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAMfE,EAAiB,mCAAG,WAAOC,GAAP,0FACTV,EAAAA,EAAAA,GAAM,wBAAD,OAAyBU,EAAzB,8CAA4ET,GADxE,uBACxBM,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKjBI,EAAkB,mCAAG,WAAOC,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,mBAAsCX,GADjC,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKlBM,EAAkB,mCAAG,WAAOD,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,2BAA8CX,GADzC,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAMlBO,EAAkB,mCAAG,WAAOF,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,kCAAqDX,GADhD,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qD,0CCpC/B,IAde,WACd,IAWE,C,iHC4CH,UAlDgB,WAEZ,OAAwCQ,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,2FACxBF,GAAY,GADY,mBAGDb,EAAAA,EAAAA,MAHC,OAGdC,EAHc,OAIpBU,EAAgBV,EAAKe,SAJD,gDAOpBC,QAAQC,QAAR,MAPoB,yBASpBL,GAAY,GATQ,4EAAH,qDAYzBE,GACH,GAAE,IAGLE,QAAQE,IAAIT,IAEJ,iBAAKU,UAAU,YAAf,UAECR,IAAY,SAAC,IAAD,IACZF,IAAgB,gBAAKU,UAAU,aAAf,SACxBV,EAAaW,KAAI,SAAAC,GACd,IAAMC,EAAS,8CAA0CD,EAAYE,eAErE,OACJ,iBAAKJ,UAAU,OAAf,WAEI,gBAAKK,IAAKF,EAAWH,UAAU,eAAeM,IAAKJ,EAAYK,SAC/D,iBAAKP,UAAU,YAAf,WACA,SAAC,KAAD,CAAMQ,GAAE,kBAAaN,EAAYO,IAAMT,UAAU,aAAjD,SAA+DE,EAAYK,SACzE,cAAGP,UAAU,YAAb,SAA0BE,EAAYQ,YACtC,cAAGV,UAAU,YAAb,UAAyB,mBAAOA,UAAU,sBAAjB,UAAuC,MAAIE,EAAYS,aAAaC,QAAQ,SAErG,SAAC,KAAD,CAAMJ,GAAE,kBAAaN,EAAYO,IAAjC,SAAwC,uBARnBP,EAAYO,GAYtC,QAIA,C","sources":["ServiceApi/AllApiFetch.jsx","components/Loader/Loader.jsx","pages/InTrend.jsx"],"sourcesContent":["// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\n\n\n\n\nimport axios from 'axios'\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/'\n\nconst options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MWY1ZmQ4ZGMwZDZkNWUzNmE0MTk2NTgzYzVjMTQ5ZSIsInN1YiI6IjY0ZDI5ODNlODUwOTBmMDE0NDVkMTZhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cCL_vkXeZRKopM-L3r01YH3xygP-PT4RBaXjsS3_dWE',\n    },\n};\n\n\nexport const getAllTrendingFilms = async () => {\n\tconst { data } = await axios(`3/trending/movie/week?language=en-US`, options)\n\treturn data\n}\n\nexport const getTrendingFilm = async () => {\n\tconst { data } = await axios(`3/trending/movie/day?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllSearchFilms = async (query) => {\n\tconst { data } = await axios(`3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getAllFilmsDetails = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}?language=en-US`, options)\n\treturn data\n}\n\nexport const getAllFilmsCredits = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/credits?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllFilmsReviews = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/reviews?language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getPosterMovie = (pathToPoster) => {\n  return `https://image.tmdb.org/t/p/original${pathToPoster}`\n}\n\n\n","import { Rings } from  'react-loader-spinner'\n\nconst Loader = () => {\n<Rings\n  height=\"80\"\n  width=\"80\"\n  color=\"#4fa94d\"\n  radius=\"6\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"rings-loading\"\n/>\n    \n  }\n  \nexport default Loader","import React from \"react\";\nimport { getAllTrendingFilms } from \"ServiceApi/AllApiFetch\"\nimport { useEffect, useState } from \"react\"\nimport Loader from \"components/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst InTernd = () => {\n\n    const [arrayResults, setArrayResults] = useState(null);\n    const [isLoader, setIsLoader] = useState(false);\n    \n    useEffect(() => {\n      const fetchTrendingMovies = async () => {\n          setIsLoader(true);\n          try {\n              const data = await getAllTrendingFilms();\n              setArrayResults(data.results);\n          }\n          catch (error) {\n              console.message(error);\n          } finally {\n              setIsLoader(false);\n          }\n      }\n      fetchTrendingMovies()\n  }, [])\n  \n\nconsole.log(arrayResults);\n    return (\n        <div className=\"container\">\n            \n        {isLoader && <Loader />}\n        {arrayResults && <div className=\"card-group\">\n{arrayResults.map(arrayResult => {\n    const posterIMG = `https://image.tmdb.org/t/p/original/${arrayResult.backdrop_path}`\n    \n    return(\n<div className=\"card\" key={arrayResult.id}>\n\n    <img src={posterIMG} className=\"card-img-top\" alt={arrayResult.title}/>\n    <div className=\"card-body\" >\n    <Link to={`/movies/${arrayResult.id}`} className=\"card-title\">{arrayResult.title}</Link> \n      <p className=\"card-text\">{arrayResult.overview}</p>\n      <p className=\"card-text\"><small className=\"text-body-secondary\">10/{arrayResult.vote_average.toFixed(2)}</small>\n      </p>\n      <Link to={`/movies/${arrayResult.id}`} > Details.....</Link> \n    </div>\n  </div>\n    )\n})}\n  </div>}\n  </div>\n    )\n}\n\nexport default InTernd"],"names":["axios","options","method","headers","accept","Authorization","getAllTrendingFilms","data","getTrendingFilm","getAllSearchFilms","query","getAllFilmsDetails","movieId","getAllFilmsCredits","getAllFilmsReviews","useState","arrayResults","setArrayResults","isLoader","setIsLoader","useEffect","fetchTrendingMovies","results","console","message","log","className","map","arrayResult","posterIMG","backdrop_path","src","alt","title","to","id","overview","vote_average","toFixed"],"sourceRoot":""}