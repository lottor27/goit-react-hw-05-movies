{"version":3,"file":"static/js/582.e178eab6.chunk.js","mappings":"uUAaAA,EAAAA,EAAAA,SAAAA,QAAyB,8BAEzB,IAAMC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAKKC,EAAmB,mCAAG,uGACXN,EAAAA,EAAAA,GAAM,uCAAwCC,GADnC,uBAC1BM,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,qDAKnBC,EAAe,mCAAG,uGACPR,EAAAA,EAAAA,GAAM,sCAAuCC,GADtC,uBACtBM,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAMfE,EAAiB,mCAAG,WAAOC,GAAP,0FACTV,EAAAA,EAAAA,GAAM,wBAAD,OAAyBU,EAAzB,8CAA4ET,GADxE,uBACxBM,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKjBI,EAAkB,mCAAG,WAAOC,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,mBAAsCX,GADjC,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKlBM,EAAkB,mCAAG,WAAOD,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,2BAA8CX,GADzC,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAMlBO,EAAkB,mCAAG,WAAOF,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,kCAAqDX,GADhD,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qD,0CCpC/B,IAde,WACd,IAWE,C,gKCMH,EAjBe,SAAC,GAA+B,IAAD,EAA5BQ,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAElBC,EAAY,WADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,KAErC,OACE,0BACE,SAAC,KAAD,CACEC,GAAIJ,GAAgB,WACpBK,QAASN,EACTO,UAAU,4BAHZ,SAKGR,KAIV,E,SCuBD,EAlCyB,SAAC,GAAe,IAAbS,EAAY,EAAZA,MAMlBC,EAAS,8CAA0CD,EAAME,aACzDC,EAAaH,EAAME,YAAcD,EAAYG,EAGnD,OACE,4BACE,0BACE,gBAAKC,IAAKF,EAAYG,IAAKN,EAAMO,eAAgBC,MAAO,SAE1D,4BACE,0BACGR,EAAMS,MAAM,KAdL,SAAAT,GAAK,OAAIA,EAAMU,aAAaC,MAAM,KAAK,EAAlC,CAcGC,CAAQZ,GAAO,QAEjC,yBAAG,eAjBY,SAAAA,GAAK,OAAIa,KAAKC,MAAOd,EAAMe,aAAe,GAAM,IAA3C,CAiBJC,CAAahB,GAAO,QACpC,wBAAI,cACJ,uBAAIA,EAAMiB,YACV,wBAAI,YACJ,uBAnBY,SAAAjB,GAAK,OAAIA,EAAMkB,OAAOC,KAAI,SAAAC,GAAK,OAAI,0BAAsBA,EAAMC,MAAjBD,EAAME,GAArB,GAA1B,CAmBbC,CAAUvB,UASvB,ECiBD,EA/CsB,WAClB,IAAQZ,GAAYoC,EAAAA,EAAAA,MAAZpC,QACR,GAA0CqC,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWtC,EAAAA,EAAAA,MAmBjB,OAjBAuC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,2FACtBL,GAAY,GADU,mBAGC1C,EAAAA,EAAAA,IAAmBC,GAHpB,OAGZL,EAHY,OAIlB4C,EAAiB5C,GAJC,gDAOlBoD,QAAQC,MAAM,KAAMC,SAPF,yBASlBR,GAAY,GATM,4EAAH,qDAYvBK,GACH,GAAE,CAAC9C,KAIF,2BACG,IACAwC,IAAY,SAACU,EAAA,EAAD,KACb,SAAC,EAAD,CACE9C,YAAa,WAAOsC,EAASE,EAAW,EAD1C,SAC6C,YAG5CN,IAAiB,SAAC,EAAD,CAAkB1B,MAAO0B,KAC3C,iBAAK3B,UAAU,eAAf,WACE,cAAGA,UAAU,sBAAb,SAAmC,4BACnC,SAAC,KAAD,CAAMF,GAAG,OAAOE,UAAU,4BAA1B,SAAsD,UAGtD,SAAC,KAAD,CAAMF,GAAG,UAAUE,UAAU,4BAA7B,SAAyD,aAGzD,SAAC,KAAD,SAIT,C","sources":["ServiceApi/AllApiFetch.jsx","components/Loader/Loader.jsx","components/ButtonBack/ButtonBack.jsx","components/MovieDetailsCard/MovieDetailsCard.jsx","pages/DetailsMovies.jsx"],"sourcesContent":["// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\n\n\n\n\nimport axios from 'axios'\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/'\n\nconst options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MWY1ZmQ4ZGMwZDZkNWUzNmE0MTk2NTgzYzVjMTQ5ZSIsInN1YiI6IjY0ZDI5ODNlODUwOTBmMDE0NDVkMTZhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cCL_vkXeZRKopM-L3r01YH3xygP-PT4RBaXjsS3_dWE',\n    },\n};\n\n\nexport const getAllTrendingFilms = async () => {\n\tconst { data } = await axios(`3/trending/movie/week?language=en-US`, options)\n\treturn data\n}\n\nexport const getTrendingFilm = async () => {\n\tconst { data } = await axios(`3/trending/movie/day?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllSearchFilms = async (query) => {\n\tconst { data } = await axios(`3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getAllFilmsDetails = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}?language=en-US`, options)\n\treturn data\n}\n\nexport const getAllFilmsCredits = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/credits?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllFilmsReviews = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/reviews?language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getPosterMovie = (pathToPoster) => {\n  return `https://image.tmdb.org/t/p/original${pathToPoster}`\n}\n\n\n","import { Rings } from  'react-loader-spinner'\n\nconst Loader = () => {\n<Rings\n  height=\"80\"\n  width=\"80\"\n  color=\"#4fa94d\"\n  radius=\"6\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"rings-loading\"\n/>\n    \n  }\n  \nexport default Loader","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Button = ({ children, handleClick }) => {\n    const location = useLocation();\n    const fromLocation = location.state?.from;\n\n    return (\n      <div>\n        <Link\n          to={fromLocation || '/inTrend' || '/movies'}\n          onClick={handleClick}\n          className=\"btn btn-outline-secondary\"\n        >\n          {children}\n        </Link>\n      </div>\n    );\n}\n\nexport default Button;","import React from 'react';\n\nimport DefaultFilm from 'DefaultFilm.jpg'\n// import Reviews from 'components/Reviews/Reviews';\n// import Cast from 'components/Cast/Cast';\n\n\nconst MovieDetailsCard = ({ movie }) => {\n\n    const getUserScope = movie => Math.floor((movie.vote_average / 10) * 100);\n    const getYear = movie => movie.release_date.split('-')[0];\n    const getGenres = movie => movie.genres.map(genre => <span key={genre.id}>{genre.name}</span>);\n    \n    const posterIMG = `https://image.tmdb.org/t/p/original/${movie.poster_path}`;\n    const posterPath = movie.poster_path ? posterIMG : DefaultFilm;\n   \n\n    return (\n      <div>\n        <div>\n          <img src={posterPath} alt={movie.original_title} width={250} />\n        </div>\n        <div>\n          <h2>\n            {movie.title} ({getYear(movie)})\n          </h2>\n          <p>User score: {getUserScope(movie)}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h4>Genres</h4>\n          <p>{getGenres(movie)}</p>\n        </div>\n        {/* <button type=\"button\" onClick={Reviews}>\n          Reviews\n        </button> */}\n        {/* <Reviews />\n        <Cast /> */}\n      </div>\n    );\n}\n\nexport default MovieDetailsCard;","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport Loader from 'components/Loader/Loader';\nimport { getAllFilmsDetails } from \"ServiceApi/AllApiFetch\"\nimport Button from \"components/ButtonBack/ButtonBack\";\nimport MovieDetailsCard from \"components/MovieDetailsCard/MovieDetailsCard\";\nimport { Link, Outlet } from \"react-router-dom\";\n\nconst DetailsMovies = () => {\n    const { movieId } = useParams();\n    const [selectedMovie, setSelectedMovie] = useState(null);\n    const [isLoader, setIsLoader] = useState(false);\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            setIsLoader(true);\n            try {\n                const data = await getAllFilmsDetails(movieId);\n                setSelectedMovie(data);\n            }\n            catch (error) {\n                console.error(error.message);\n            } finally {\n                setIsLoader(false);\n            }\n        }\n        fetchMovieDetails()\n    }, [movieId])\n\n\n    return (\n      <div>\n        {' '}\n        {isLoader && <Loader />}\n        <Button\n          handleClick={() => {navigate(location);}} >\n          Go back\n        </Button>\n        {selectedMovie && <MovieDetailsCard movie={selectedMovie} />}\n        <div className=\"d-grid gap-2\">\n          <p className=\"text-body-secondary\">Additional information</p>\n          <Link to=\"cast\" className=\"btn btn-outline-secondary\">\n            Cast\n          </Link>\n          <Link to=\"reviews\" className=\"btn btn-outline-secondary\">\n            Reviews\n          </Link>\n          <Outlet />\n        </div>\n      </div>\n    );\n}\n\nexport default DetailsMovies"],"names":["axios","options","method","headers","accept","Authorization","getAllTrendingFilms","data","getTrendingFilm","getAllSearchFilms","query","getAllFilmsDetails","movieId","getAllFilmsCredits","getAllFilmsReviews","children","handleClick","fromLocation","useLocation","state","from","to","onClick","className","movie","posterIMG","poster_path","posterPath","DefaultFilm","src","alt","original_title","width","title","release_date","split","getYear","Math","floor","vote_average","getUserScope","overview","genres","map","genre","name","id","getGenres","useParams","useState","selectedMovie","setSelectedMovie","isLoader","setIsLoader","navigate","useNavigate","location","useEffect","fetchMovieDetails","console","error","message","Loader"],"sourceRoot":""}