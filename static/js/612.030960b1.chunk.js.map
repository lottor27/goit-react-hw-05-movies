{"version":3,"file":"static/js/612.030960b1.chunk.js","mappings":"+VAaAA,EAAAA,EAAAA,SAAAA,QAAyB,8BAEzB,IAAMC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAKKC,EAAmB,mCAAG,uGACXN,EAAAA,EAAAA,GAAM,uCAAwCC,GADnC,uBAC1BM,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,qDAKnBC,EAAe,mCAAG,uGACPR,EAAAA,EAAAA,GAAM,sCAAuCC,GADtC,uBACtBM,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAMfE,EAAiB,mCAAG,WAAOC,GAAP,0FACTV,EAAAA,EAAAA,GAAM,wBAAD,OAAyBU,EAAzB,8CAA4ET,GADxE,uBACxBM,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKjBI,EAAkB,mCAAG,WAAOC,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,mBAAsCX,GADjC,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKlBM,EAAkB,mCAAG,WAAOD,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,2BAA8CX,GADzC,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAMlBO,EAAkB,mCAAG,WAAOF,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,kCAAqDX,GADhD,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKlBQ,EAAiB,SAACC,GAC7B,MAAM,sCAAN,OAA6CA,EAC9C,C,0CC3CD,IAde,WACd,IAWE,C,uJCcH,EAzBY,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAGV,SAASC,IACL,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,SACxB,CAJHC,QAAQC,IAAIN,GAMVK,QAAQC,IAAIL,KACZ,IAAMM,EAAaP,EAAaC,KAChCI,QAAQC,IAAIC,EAAWC,aACvB,IAAMC,EAAS,8CAA0CF,EAAWG,eAEtE,OACI,iBAAKC,UAAU,YAAf,WACA,gBAAKC,IAAKH,EAAWE,UAAU,eAAeE,IAAKN,EAAWO,SAC9D,iBAAKH,UAAU,YAAf,WACA,SAAC,KAAD,CAAMI,GAAE,iBAAYR,EAAWS,IAAML,UAAU,aAA/C,SAA6DJ,EAAWU,kBACtE,cAAGN,UAAU,YAAb,SAA0BJ,EAAWW,YACrC,cAAGP,UAAU,YAAb,UAAyB,mBAAOA,UAAU,sBAAjB,UAAuC,MAAIJ,EAAWY,aAAaC,QAAQ,SACpG,SAAC,KAAD,CAAML,GAAE,iBAAYR,EAAWS,IAA/B,SAAsC,uBAI/C,ECWD,EA/BiB,WACf,OAAwCK,EAAAA,EAAAA,UAAS,MAAjD,eAAOrB,EAAP,KAAqBsB,EAArB,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KAoBD,OAlBCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,2FACxBF,GAAY,GADY,mBAGDjC,EAAAA,EAAAA,MAHC,OAGdD,EAHc,OAIpBgC,EAAgBhC,EAAKqC,SAJD,gDAOpBtB,QAAQuB,QAAR,MAPoB,yBASpBJ,GAAY,GATQ,4EAAH,qDAYzBE,GACH,GAAE,IAGCrB,QAAQC,IAAI,kBAEZ,2BACCiB,IAAY,SAACM,EAAA,EAAD,IACZ7B,IAAgB,SAAC,EAAD,CAAMA,aAAcA,MAIxC,C","sources":["ServiceApi/AllApiFetch.jsx","components/Loader/Loader.jsx","components/Hero/Hero.jsx","pages/Homepage.jsx"],"sourcesContent":["// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\n\n\n\n\nimport axios from 'axios'\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/'\n\nconst options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MWY1ZmQ4ZGMwZDZkNWUzNmE0MTk2NTgzYzVjMTQ5ZSIsInN1YiI6IjY0ZDI5ODNlODUwOTBmMDE0NDVkMTZhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cCL_vkXeZRKopM-L3r01YH3xygP-PT4RBaXjsS3_dWE',\n    },\n};\n\n\nexport const getAllTrendingFilms = async () => {\n\tconst { data } = await axios(`3/trending/movie/week?language=en-US`, options)\n\treturn data\n}\n\nexport const getTrendingFilm = async () => {\n\tconst { data } = await axios(`3/trending/movie/day?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllSearchFilms = async (query) => {\n\tconst { data } = await axios(`3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getAllFilmsDetails = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}?language=en-US`, options)\n\treturn data\n}\n\nexport const getAllFilmsCredits = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/credits?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllFilmsReviews = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/reviews?language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getPosterMovie = (pathToPoster) => {\n  return `https://image.tmdb.org/t/p/original${pathToPoster}`\n}\n\n\n","import { Rings } from  'react-loader-spinner'\n\nconst Loader = () => {\n<Rings\n  height=\"80\"\n  width=\"80\"\n  color=\"#4fa94d\"\n  radius=\"6\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"rings-loading\"\n/>\n    \n  }\n  \nexport default Loader","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Hero =({arrayResults})=>{\n    console.log(arrayResults);\n    \n    function getRandomInt() {\n        return Math.floor(Math.random() * 21);\n      }\n\n      console.log(getRandomInt());\n      const randomHero = arrayResults[getRandomInt()]\n      console.log(randomHero.poster_path);\n      const posterIMG = `https://image.tmdb.org/t/p/original/${randomHero.backdrop_path}`\n      \n    return(\n        <div className=\"card mb-3\">\n        <img src={posterIMG} className=\"card-img-top\" alt={randomHero.title}/>\n        <div className=\"card-body\">\n        <Link to={`movies/${randomHero.id}`} className=\"card-title\">{randomHero.original_title}</Link> \n          <p className=\"card-text\">{randomHero.overview}</p>\n          <p className=\"card-text\"><small className=\"text-body-secondary\">10/{randomHero.vote_average.toFixed(2)}</small></p>\n          <Link to={`movies/${randomHero.id}`} > Details.....</Link> \n        </div>\n      </div>\n    )\n}\n\nexport default Hero","import { getTrendingFilm } from \"ServiceApi/AllApiFetch\"\nimport { useEffect, useState } from \"react\"\nimport React from \"react\"\nimport Loader from \"components/Loader/Loader\"\nimport Hero from \"components/Hero/Hero\"\n\nconst HomePage = () => {\n  const [arrayResults, setArrayResults] = useState(null);\n  const [isLoader, setIsLoader] = useState(false);\n  \n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n        setIsLoader(true);\n        try {\n            const data = await getTrendingFilm();\n            setArrayResults(data.results);\n        }\n        catch (error) {\n            console.message(error);\n        } finally {\n            setIsLoader(false);\n        }\n    }\n    fetchTrendingMovies()\n}, [])\n\n\n    console.log(\"Hello in home\");\n\treturn (\n    <div>\n    {isLoader && <Loader />}\n    {arrayResults && <Hero arrayResults={arrayResults} />}\n    </div>\n  \n\t)\n}\n\nexport default HomePage"],"names":["axios","options","method","headers","accept","Authorization","getAllTrendingFilms","data","getTrendingFilm","getAllSearchFilms","query","getAllFilmsDetails","movieId","getAllFilmsCredits","getAllFilmsReviews","getPosterMovie","pathToPoster","arrayResults","getRandomInt","Math","floor","random","console","log","randomHero","poster_path","posterIMG","backdrop_path","className","src","alt","title","to","id","original_title","overview","vote_average","toFixed","useState","setArrayResults","isLoader","setIsLoader","useEffect","fetchTrendingMovies","results","message","Loader"],"sourceRoot":""}