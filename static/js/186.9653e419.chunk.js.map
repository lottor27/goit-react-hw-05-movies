{"version":3,"file":"static/js/186.9653e419.chunk.js","mappings":"uUAaAA,EAAAA,EAAAA,SAAAA,QAAyB,8BAEzB,IAAMC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAKKC,EAAmB,mCAAG,uGACXN,EAAAA,EAAAA,GAAM,uCAAwCC,GADnC,uBAC1BM,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,qDAKnBC,EAAe,mCAAG,uGACPR,EAAAA,EAAAA,GAAM,sCAAuCC,GADtC,uBACtBM,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAMfE,EAAiB,mCAAG,WAAOC,GAAP,0FACTV,EAAAA,EAAAA,GAAM,wBAAD,OAAyBU,EAAzB,8CAA4ET,GADxE,uBACxBM,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKjBI,EAAkB,mCAAG,WAAOC,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,mBAAsCX,GADjC,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKlBM,EAAkB,mCAAG,WAAOD,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,2BAA8CX,GADzC,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAMlBO,EAAkB,mCAAG,WAAOF,GAAP,0FACVZ,EAAAA,EAAAA,GAAM,WAAD,OAAYY,EAAZ,kCAAqDX,GADhD,uBACzBM,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qD,0CCpC/B,IAde,WACd,IAWE,C,wJCWH,EAvBoB,SAAC,GAAwB,IAAtBQ,EAAqB,EAArBA,eACnB,OACI,gBAAKC,UAAU,YAAYC,GAAG,mBAA9B,SACKF,EAAeG,KAAI,SAAAC,GAChB,OACI,iBAAKH,UAAU,iBAAf,WAChB,eAAIA,UAAU,mBAAd,UACE,mBAAQA,UAAU,mBAAmBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAA9I,SACGD,EAAOE,YAGZ,gBAAKJ,GAAG,cAAcD,UAAU,mCAAmC,iBAAe,oBAAlF,UACE,gBAAKA,UAAU,iBAAf,SACGG,EAAOG,cARyCH,EAAOF,GAanD,KAGZ,ECoBD,EAnCgB,WACZ,IAAQL,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAAyCY,EAAAA,EAAAA,UAAS,MAAlD,eAAOT,EAAP,KAAuBU,EAAvB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAgCH,EAAAA,EAAAA,WAAS,GAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,2FACnBF,GAAY,GACZF,EAAS,IAFU,mBAIIb,EAAAA,EAAAA,IAAmBF,GAJvB,QAITL,EAJS,QAKNyB,QAAQC,OAAS,GAAGR,EAAelB,EAAKyB,SALlC,gDAQfL,EAAS,KAAMO,SACfC,QAAQC,IAAIV,GATG,yBAWfG,GAAY,GAXG,4EAAH,qDAcpBE,GACH,GAAE,CAACL,EAAOd,KAIP,2BACKgB,IAAY,SAACS,EAAA,EAAD,KACb,wBAAI,YACHtB,GACG,SAAC,EAAD,CAAaA,eAAgBA,KAC1B,uBAAG,8CAGrB,C","sources":["ServiceApi/AllApiFetch.jsx","components/Loader/Loader.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\n\n\n\n\nimport axios from 'axios'\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/'\n\nconst options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MWY1ZmQ4ZGMwZDZkNWUzNmE0MTk2NTgzYzVjMTQ5ZSIsInN1YiI6IjY0ZDI5ODNlODUwOTBmMDE0NDVkMTZhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cCL_vkXeZRKopM-L3r01YH3xygP-PT4RBaXjsS3_dWE',\n    },\n};\n\n\nexport const getAllTrendingFilms = async () => {\n\tconst { data } = await axios(`3/trending/movie/week?language=en-US`, options)\n\treturn data\n}\n\nexport const getTrendingFilm = async () => {\n\tconst { data } = await axios(`3/trending/movie/day?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllSearchFilms = async (query) => {\n\tconst { data } = await axios(`3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getAllFilmsDetails = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}?language=en-US`, options)\n\treturn data\n}\n\nexport const getAllFilmsCredits = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/credits?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllFilmsReviews = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/reviews?language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getPosterMovie = (pathToPoster) => {\n  return `https://image.tmdb.org/t/p/original${pathToPoster}`\n}\n\n\n","import { Rings } from  'react-loader-spinner'\n\nconst Loader = () => {\n<Rings\n  height=\"80\"\n  width=\"80\"\n  color=\"#4fa94d\"\n  radius=\"6\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"rings-loading\"\n/>\n    \n  }\n  \nexport default Loader","import React from 'react'\n\nconst ReviewsList = ({ reviewsResults }) => {\n    return (\n        <div className=\"accordion\" id=\"accordionExample\" >\n            {reviewsResults.map(review => {\n                return (\n                    <div className=\"accordion-item\" key={review.id}>\n    <h2 className=\"accordion-header\">\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n        {review.author}\n      </button>\n    </h2>\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\n      <div className=\"accordion-body\">\n        {review.content}\n      </div>\n    </div>\n    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ReviewsList","import Loader from \"components/Loader/Loader\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getAllFilmsReviews } from \"ServiceApi/AllApiFetch\"\nimport ReviewsList from \"components/ReviewsList/ReviewsList\";\n\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviewsResults, setCastResults] = useState(null);\n    const [Error, setError] = useState('');\n    const [isLoader, setIsLoader] = useState(false);\n\n    useEffect(() => {\n        const fetchMovieCast = async () => {\n            setIsLoader(true);\n            setError('');\n            try {\n                const data = await getAllFilmsReviews(movieId);\n                if (data.results.length > 0) setCastResults(data.results);\n            }\n            catch (error) {\n                setError(error.message);\n                console.log(Error)\n            } finally {\n                setIsLoader(false);\n            }\n        }\n        fetchMovieCast()\n    }, [Error, movieId])\n\n\n    return (\n        <div>\n            {isLoader && <Loader />}\n            <h2>Reviews</h2>\n            {reviewsResults ?\n                <ReviewsList reviewsResults={reviewsResults} />\n                : (<p>We dont have any reviews for this movie</p>)}\n               </div> \n               )\n}\nexport default Reviews"],"names":["axios","options","method","headers","accept","Authorization","getAllTrendingFilms","data","getTrendingFilm","getAllSearchFilms","query","getAllFilmsDetails","movieId","getAllFilmsCredits","getAllFilmsReviews","reviewsResults","className","id","map","review","type","author","content","useParams","useState","setCastResults","Error","setError","isLoader","setIsLoader","useEffect","fetchMovieCast","results","length","message","console","log","Loader"],"sourceRoot":""}