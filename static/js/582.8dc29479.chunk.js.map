{"version":3,"file":"static/js/582.8dc29479.chunk.js","mappings":"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","sources":["ServiceApi/AllApiFetch.jsx","components/Cast/Cast.jsx","components/Loader/Loader.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","components/ButtonBack/ButtonBack.jsx","components/MovieDetailsCard/MovieDetailsCard.jsx","pages/DetailsMovies.jsx"],"sourcesContent":["// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\n\n\n\n\nimport axios from 'axios'\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/'\n\nconst options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MWY1ZmQ4ZGMwZDZkNWUzNmE0MTk2NTgzYzVjMTQ5ZSIsInN1YiI6IjY0ZDI5ODNlODUwOTBmMDE0NDVkMTZhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cCL_vkXeZRKopM-L3r01YH3xygP-PT4RBaXjsS3_dWE',\n    },\n};\n\n\nexport const getAllTrendingFilms = async () => {\n\tconst { data } = await axios(`3/trending/movie/week?language=en-US`, options)\n\treturn data\n}\n\nexport const getTrendingFilm = async () => {\n\tconst { data } = await axios(`3/trending/movie/day?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllSearchFilms = async (query) => {\n\tconst { data } = await axios(`3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getAllFilmsDetails = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}?language=en-US`, options)\n\treturn data\n}\n\nexport const getAllFilmsCredits = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/credits?language=en-US`, options)\n\treturn data\n}\n\n\nexport const getAllFilmsReviews = async (movieId) => {\n\tconst { data } = await axios(`3/movie/${movieId}/reviews?language=en-US&page=1`, options)\n\treturn data\n}\n\nexport const getPosterMovie = (pathToPoster) => {\n  return `https://image.tmdb.org/t/p/original${pathToPoster}`\n}\n\n\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getAllFilmsCredits } from \"ServiceApi/AllApiFetch\"\nimport Loader from \"components/Loader/Loader\";\nimport DefaultActor from 'DefaultActor.jpg'\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [castResults, setCastResults] = useState(null);\n    const [Error, setError] = useState('');\n    const [isLoader, setIsLoader] = useState(false);\n\n    useEffect(() => {\n        const fetchMovieCast = async () => {\n            setIsLoader(true);\n            setError('');\n            try {\n                const data = await getAllFilmsCredits(movieId);\n                setCastResults(data.cast);\n            }\n            catch (error) {\n                setError(error.message);\n                console.log(Error)\n            } finally {\n                setIsLoader(false);\n            }\n        }\n        fetchMovieCast()\n    }, [Error, movieId]);\n\n    console.log(castResults);\n    return (\n        <>\n            {isLoader && <Loader />}\n            <h2>Casting</h2>\n            {castResults && \n            <div className=\"card-group cardbox\"> \n            {castResults.map(castResult => {\n                const avatarIMG = `https://image.tmdb.org/t/p/original/${castResult.profile_path}`\n                const posterPath = castResult.profile_path ? avatarIMG : DefaultActor;\n                return (\n                  <div className=\"card-cast\" key={castResult.id}>\n  <img src={posterPath} className=\"card-img-top\" alt={castResult.name}/>\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">{castResult.name}</h5>\n    <p className=\"card-text\">{castResult.character}</p>\n    <p className=\"card-text\">Popularity - {castResult.popularity}</p>\n  </div>\n</div>\n                )\n            })}\n        </div>}\n        </>\n    )\n}\n\nexport default Cast","import { Rings } from  'react-loader-spinner'\n\nconst Loader = () => {\n<Rings\n  height=\"80\"\n  width=\"80\"\n  color=\"#4fa94d\"\n  radius=\"6\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"rings-loading\"\n/>\n    \n  }\n  \nexport default Loader","import React from 'react'\n\nconst ReviewsList = ({ reviewsResults }) => {\n    return (\n        <div className=\"accordion\" id=\"accordionExample\" >\n            {reviewsResults.map(review => {\n                return (\n                    <div className=\"accordion-item\" key={review.id}>\n    <h2 className=\"accordion-header\">\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n        {review.author}\n      </button>\n    </h2>\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\n      <div className=\"accordion-body\">\n        {review.content}\n      </div>\n    </div>\n    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ReviewsList","import Loader from \"components/Loader/Loader\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getAllFilmsReviews } from \"ServiceApi/AllApiFetch\"\nimport ReviewsList from \"components/ReviewsList/ReviewsList\";\n\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviewsResults, setCastResults] = useState(null);\n    const [Error, setError] = useState('');\n    const [isLoader, setIsLoader] = useState(false);\n\n    useEffect(() => {\n        const fetchMovieCast = async () => {\n            setIsLoader(true);\n            setError('');\n            try {\n                const data = await getAllFilmsReviews(movieId);\n                if (data.results.length > 0) setCastResults(data.results);\n            }\n            catch (error) {\n                setError(error.message);\n                console.log(Error)\n            } finally {\n                setIsLoader(false);\n            }\n        }\n        fetchMovieCast()\n    }, [Error, movieId])\n\n\n    return (\n        <div>\n            {isLoader && <Loader />}\n            <h2>Reviews</h2>\n            {reviewsResults ?\n                <ReviewsList reviewsResults={reviewsResults} />\n                : (<p>We dont have any reviews for this movie</p>)}\n               </div> \n               )\n}\nexport default Reviews","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Button = ({ children, handleClick }) => {\n    const location = useLocation();\n    const fromLocation = location.state?.from;\n\n    return (\n        <div >\n            <Link to={fromLocation || '/'} onClick={handleClick} >\n           {children}\n            </Link></div>\n    )\n}\n\nexport default Button;","import React from 'react';\nimport { getPosterMovie } from \"ServiceApi/AllApiFetch\"\nimport DefaultFilm from 'DefaultFilm.jpg'\nimport Reviews from 'components/Reviews/Reviews';\nimport Cast from 'components/Cast/Cast';\n\n\nconst MovieDetailsCard = ({ movie }) => {\n\n    const getUserScope = movie => Math.floor((movie.vote_average / 10) * 100);\n    const getYear = movie => movie.release_date.split('-')[0];\n    const getGenres = movie => movie.genres.map(genre => <span key={genre.id}>{genre.name}</span>);\n\n    const posterPath = movie.poster_path ? getPosterMovie(movie.poster_path) : DefaultFilm;\n\n    return (\n        <div >\n            <div>\n                <img\n                    src={getPosterMovie(posterPath)}\n                    alt={movie.original_title}\n                    width={250}\n                />\n            </div>\n            <div >\n                <h2 >{movie.title} ({getYear(movie)})</h2>\n                <p >User score: {getUserScope(movie)}%</p>\n                <h3 >Overview</h3>\n                <p >{movie.overview}</p>\n                <h4 >Genres</h4>\n                <p>{getGenres(movie)}</p>\n            </div>\n            <Reviews/>\n            <Cast/>\n\n        </div>\n    )\n}\n\nexport default MovieDetailsCard;","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport Loader from 'components/Loader/Loader';\nimport { getAllFilmsDetails } from \"ServiceApi/AllApiFetch\"\nimport Button from \"components/ButtonBack/ButtonBack\";\nimport MovieDetailsCard from \"components/MovieDetailsCard/MovieDetailsCard\";\n\nconst DetailsMovies = () => {\n    const { movieId } = useParams();\n    const [selectedMovie, setSelectedMovie] = useState(null);\n    const [isLoader, setIsLoader] = useState(false);\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            setIsLoader(true);\n            try {\n                const data = await getAllFilmsDetails(movieId);\n                setSelectedMovie(data);\n            }\n            catch (error) {\n                console.error(error.message);\n            } finally {\n                setIsLoader(false);\n            }\n        }\n        fetchMovieDetails()\n    }, [movieId])\n\n\n    return (\n        <div> {isLoader && <Loader />}\n        <Button\n                handleClick={() => { navigate(location) }}>\n                Go back\n            </Button>\n            {selectedMovie && <MovieDetailsCard movie={selectedMovie} />}\n\n        </div>\n    )\n}\n\nexport default DetailsMovies"],"names":["axios","options","method","headers","accept","Authorization","getAllTrendingFilms","data","getTrendingFilm","getAllSearchFilms","query","getAllFilmsDetails","movieId","getAllFilmsCredits","getAllFilmsReviews","getPosterMovie","pathToPoster","useParams","useState","castResults","setCastResults","Error","setError","isLoader","setIsLoader","useEffect","fetchMovieCast","cast","message","console","log","Loader","className","map","castResult","avatarIMG","profile_path","posterPath","src","alt","name","character","popularity","id","reviewsResults","review","type","author","content","results","length","children","handleClick","fromLocation","useLocation","state","from","to","onClick","movie","poster_path","DefaultFilm","original_title","width","title","release_date","split","getYear","Math","floor","vote_average","getUserScope","overview","genres","genre","getGenres","Reviews","Cast","selectedMovie","setSelectedMovie","navigate","useNavigate","location","fetchMovieDetails","error"],"sourceRoot":""}